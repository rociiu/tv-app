{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["playlistData","require","App","props","React","useState","index","setIndex","handleKeyDown","event","console","log","keyCode","randomIndex","Math","floor","random","length","useEffect","window","addEventListener","removeEventListener","src","url","autoPlay","controls","width","height","style","textAlign","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o4mrCAIMA,EAAeC,EAAQ,IA2CdC,EAzCH,SAACC,GAAW,IAAD,EACKC,IAAMC,SAAS,GADpB,mBACdC,EADc,KACPC,EADO,KAGfC,EAAgB,SAACC,GAGrB,GAFAC,QAAQC,IAAI,oBAAqBF,EAAMG,SACvCF,QAAQC,IAAIL,GACQ,IAAjBG,EAAMG,QACPL,EAASD,EAAQ,QACZ,GAAqB,IAAjBG,EAAMG,QACfL,EAASD,EAAQ,QACZ,GAAqB,IAAjBG,EAAMG,SAAkC,IAAjBH,EAAMG,QAAe,CACrD,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,UAAYhB,EAAaiB,OAAS,EAAI,GAAK,GAC7EV,EAASM,KAab,OATAT,IAAMc,WAAU,WAId,OAHAC,OAAOC,iBAAiB,UAAWZ,GAG5B,WACLW,OAAOE,oBAAoB,UAAWb,MAEvC,CAACF,IAGF,8BACE,gCACE,cAAC,IAAD,CACEgB,IAAKtB,EAAaM,GAAOiB,IACzBC,UAAU,EACVC,UAAU,EACVC,MAAM,OACNC,OAAO,SAET,oBAAIC,MAAO,CAACC,UAAW,UAAvB,SAAoC7B,EAAaM,GAAOwB,aC7BjDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e19f882.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactHlsPlayer from 'react-hls-player';\n\nconst playlistData = require('./playlist.json');\n\nconst App = (props) => {\n  const [index, setIndex] = React.useState(0);\n\n  const handleKeyDown = (event) => {\n    console.log('A key was pressed', event.keyCode);\n    console.log(index)\n    if(event.keyCode == 39) {\n      setIndex(index + 1)\n    } else if (event.keyCode == 37) {\n      setIndex(index - 1)\n    } else if (event.keyCode == 38 || event.keyCode == 40) {\n      var randomIndex = Math.floor(Math.random() * (playlistData.length - 0 + 1) + 0);\n      setIndex(randomIndex)\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // cleanup this component\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [index]);\n\n  return (\n    <div>\n      <div>\n        <ReactHlsPlayer\n          src={playlistData[index].url}\n          autoPlay={true}\n          controls={true}\n          width=\"100%\"\n          height=\"auto\"\n        />\n        <h2 style={{textAlign: 'center'}}>{ playlistData[index].name }</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}